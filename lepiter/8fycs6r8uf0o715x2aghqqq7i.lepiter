{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:47.077255+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:54:34.272506+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "nOesVLfRDQCNbLnvDomdjg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Notes from a discussion between [[AC]] and [[ON]] on 2023-12-21"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.462168+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.462168+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "bPEKVLfRDQCNRHalDomdjg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "There are several pages in the book, eg: {{gtPage:Extending the debugger through moldable exceptions|db=2j9m7db2i4oz116bexd7wbdxo}}"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.463101+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.463101+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "EPUKVLfRDQCNRhpdDomdjg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "We extend the debugger just like the inspector."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.463826+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.463826+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "4fcKVLfRDQCNR9xcDomdjg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "{{gtPage:Usages of moldable exceptions in Glamorous Toolkit|db=2j9m7db2i4oz116bexd7wbdxo}}"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.464864+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.464864+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "7fsKVLfRDQCNSas9Domdjg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The pragma `gtExceptionDebuggingView` will instantiate a domain-specific debugger for that exception. For example: {{gtMethod:name=AssertionFailure>>#gtTwoPanesStringDiffFor:}}. "
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.465376+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.465376+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "6f0KVLfRDQCNSkfJDomdjg=="
				},
				"code" : "#gtExceptionDebuggingView gtPragmas."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.465774+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.465774+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "eP8KVLfRDQCNSwDdDomdjg=="
				},
				"code" : "#gtContextDebuggingView gtPragmas."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.466291+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.466291+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "fAELVLfRDQCNTOutDomdjg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "This looks interesting: {{gtMethod:name=FileSystemError>>#gtReferenceFor:}}"
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.466564+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.466564+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "iwILVLfRDQCNTdzJDomdjg=="
				},
				"code" : "'foo/bar/baz' asFileReference createDirectory."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.466901+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.466901+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "3AMLVLfRDQCNThrQDomdjg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "In the last example there is also a fixit transformation and an explanation."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.467306+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.467306+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "cAULVLfRDQCNT2L8Domdjg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Deprecation refactorings in Pharo are another example of this idea, but in Pharo it only works in that specific case. Wth moldable exceptions we can do this for any kind of exception."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2024-04-05T10:53:36.468213+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2024-04-05T10:53:36.468213+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "+AgLVLfRDQCNUWWoDomdjg=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Lepiter exception when there are two conflicting versions of a page (in image and in the file)."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2024-04-05T10:53:36.468218+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2024-04-05T10:53:36.468218+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "/AgLVLfRDQCNUhtEDomdjg=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Before we only had a way to define new debuggers in the system. Now we want it to be dynamic based on the exception. The exception could provide a list of debuggers to activate."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2024-04-05T10:53:36.468222+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2024-04-05T10:53:36.468222+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "/wgLVLfRDQCNUzUgDomdjg=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Moldable exceptions are being used extensively in LifeWare for program repair. Lots of tests that require fixes. Eg referencing undeclared classes. Three ways to runs tests in Lifeware: (1) run, (2) show, (3) fixit (transformation). Instead of running the test three ways in different modes, could add all these to a single exception view."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2024-04-05T10:53:36.468224+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2024-04-05T10:53:36.468224+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "AgkLVLfRDQCNVNmtDomdjg=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Zinc exception failure on access — exception could show you the returned header and an action to retry."
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.468198+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.468198+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "7QgLVLfRDQCNUMIqDomdjg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "AC is planning: "
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.468546+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.468546+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "SAoLVLfRDQCNVSJgDomdjg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "In practice we rarely want to create new debuggers. This is much more useful. "
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.46892+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.46892+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "vgsLVLfRDQCNVv9XDomdjg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "For now the views are just inspector views, so they have no access to the debugger. But we could have an extra argument `inContext:` so you can check if you are in a debugging context and through the context access the debugger."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.469753+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-05T10:53:36.469753+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "AQ8LVLfRDQCNV+BGDomdjg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "NB: Not just exception, but also objects that are stored in exceptions can define debugging views. See the last example of {{gtPage:Examples of moldable exceptions|db=2j9m7db2i4oz116bexd7wbdxo}}. The configuration is defined in {{gtMethod:name=GtExampleExceptionWithForwardedDebuggingView>>#gtDebuggingExtensionConfiguration}}.  See the `*GToolkit-Debugger` protocol in {{gtClass:name=Exception}}. "
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2024-04-05T10:53:23.671544+02:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2024-04-05T10:53:23.671544+02:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "2023-12-21 Moldable Exceptions mtg"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "2ec54753-b7d1-0d00-8d0e-72d20e899d8e"
	}
}